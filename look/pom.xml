<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  	
	<groupId>org.jobs</groupId>
	<artifactId>look</artifactId>
	<version>1.0</version>
	<name>JobWatcher</name>  
	 <packaging>jar</packaging>
  
  <dependencies>
  
 	 <dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.10</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-all</artifactId>
		<version>1.9.5-rc1</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
      <groupId>org.codehaus.izpack</groupId>
      <artifactId>izpack-standalone-compiler</artifactId>
      <version>${izpack-standalone.version}</version>
      <optional>true</optional>
    </dependency>
    
    <dependency>
		<groupId>com.google.code.gson</groupId>
		<artifactId>gson</artifactId>
		<version>2.2.2</version>
	</dependency>	

  </dependencies>
  
  
  <build>
  
  <pluginManagement>
<plugins>
    <!-- Ignore/Execute plugin execution -->
    <plugin>
        <groupId>org.eclipse.m2e</groupId>
        <artifactId>lifecycle-mapping</artifactId>
        <version>1.0.0</version>
        <configuration>
            <lifecycleMappingMetadata>
                <pluginExecutions>
                    <!-- copy-dependency plugin -->
                    <pluginExecution>
                        <pluginExecutionFilter>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <versionRange>[1.0.0,)</versionRange>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                        </pluginExecutionFilter>
                        <action>
                            <ignore />
                        </action>
                    </pluginExecution>
                </pluginExecutions>
            </lifecycleMappingMetadata>
        </configuration>
    </plugin>
    
    
    
     <!-- configure the compiler to use 1.5  -->
        <plugin>
        	<groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.5</source>
            <target>1.5</target>
          </configuration>
        </plugin>
        
        <plugin>  
          <groupId>org.apache.maven.plugins</groupId>  
          <artifactId>maven-jar-plugin</artifactId>  
          <configuration>  
             <archive>  
                <manifest>  
                   <addClasspath>true</addClasspath>  
                   <classpathPrefix>lib/</classpathPrefix>  
                   <mainClass>org.jobs.Windows</mainClass>  
                </manifest>  
             </archive>  
          </configuration>  
       </plugin>  
       
        <plugin>  
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-assembly-plugin</artifactId>  
        <configuration>  
          <descriptors>  
            <descriptor>src/main/java/assembly/assembly.xml</descriptor>  
          </descriptors>  
        </configuration>  
        <executions>  
          <execution>  
            <id>make-assembly</id>  
            <phase>package</phase>  
            <goals>  
              <goal>single</goal>  
            </goals>  
          </execution>  
        </executions>  
      </plugin>  

        <!--  copy other checked resource into staging area, expected by install.xml -->
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.1</version>
          <executions>
            <execution>
              <id>create-staging-area</id>
              <phase>process-resources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <tasks>
                  <copy todir="${staging.dir}">
                    <fileset dir="${basedir}/src/izpack" />
                  </copy>
                </tasks>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!--  prepare dependencies so that izpack jar tag to pickup at compile time -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.0</version>
          <executions>
            <execution>
              <id>standard-installer</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <stripVersion>true</stripVersion>
                <excludeGroupIds>org.codehaus.izpack</excludeGroupIds> <!-- dont want standalone compiler -->
                <outputDirectory>${staging.dir}/dependency</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!--  see install.xml to see how MyHelloPanel is used -->
        <plugin>
          <groupId>org.codehaus.izpack</groupId>
          <artifactId>izpack-maven-plugin</artifactId>
          <version>1.0-alpha-5</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.izpack</groupId>
              <artifactId>izpack-standalone-compiler</artifactId>
              <version>${izpack-standalone.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <izpackBasedir>${staging.dir}</izpackBasedir>
            <customPanelDirectory>${staging.dir}</customPanelDirectory>
          </configuration>
          <executions>
            <execution>
              <id>standard-installer</id>
              <phase>package</phase>
              <goals>
                <goal>izpack</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
    
   </plugins>
   
   </pluginManagement>
     
    <defaultGoal>package</defaultGoal>
    
    <finalName>${project.artifactId}</finalName>
    
     

       
        
   
  
  </build>
  
  <properties>
    <staging.dir>${project.build.directory}/staging</staging.dir>
    <izpack-standalone.version>4.3.1</izpack-standalone.version>
  </properties>
  
</project>